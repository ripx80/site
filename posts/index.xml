<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>blog on ripx80 onexec</title><link>https://ripx80.de/posts/</link><description>Recent content in blog on ripx80 onexec</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 17 Feb 2025 14:28:34 +0100</lastBuildDate><atom:link href="https://ripx80.de/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>wireguard mtu calculation</title><link>https://ripx80.de/posts/06-wg-mtu/</link><pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate><guid>https://ripx80.de/posts/06-wg-mtu/</guid><description>&lt;p>when the wireguard protocol is used the mtu size is reduced inside the tunnel.
this can be a problem when your isp cut off your mtu size and you use large packets like the ssh handshake inside a wireguard connection.
this results in a connection that sometimes work and sometimes not.
to enable a stable connection within wireguard and to avoid isp-related problems, the &lt;strong>mtu&lt;/strong> should be set to &lt;strong>1380&lt;/strong> bytes.&lt;/p></description></item><item><title>nftables - advanced router</title><link>https://ripx80.de/posts/05-nftables-router/</link><pubDate>Fri, 31 May 2024 00:00:00 +0000</pubDate><guid>https://ripx80.de/posts/05-nftables-router/</guid><description>&lt;p>this post deals with some advanced rules and configurations to build router based on the previous post about &lt;a href="https://ripx80.de/posts/04-nftables/">nftables - basics&lt;/a>.
the focus is in general on nftables but the whole thing is build on a nixos system.&lt;/p></description></item><item><title>nftables - basics</title><link>https://ripx80.de/posts/04-nftables/</link><pubDate>Mon, 15 Apr 2024 00:00:00 +0000</pubDate><guid>https://ripx80.de/posts/04-nftables/</guid><description>&lt;p>update: &lt;strong>2024-04-20&lt;/strong>&lt;/p>
&lt;p>nftables is the modern linux kernel (&amp;gt;= 3.13 nft &lt;a href="https://git.netfilter.org/nftables/log/doc?showmsg=1">support&lt;/a>) packet classification framework to replace iptables.&lt;/p></description></item><item><title>requirements</title><link>https://ripx80.de/posts/03-requirements/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://ripx80.de/posts/03-requirements/</guid><description>&lt;ul>
&lt;li>we are influenced by our environment&lt;/li>
&lt;li>the more often we have the same thing every day, the more likely they are to become a requirement&lt;/li>
&lt;li>track yourself what&amp;rsquo;s your hidden requirements, to be aware of&lt;/li>
&lt;li>stay minimal in life and technical&lt;/li>
&lt;li>enjoy if you have more at the time, it will not always be like this&lt;/li>
&lt;/ul></description></item><item><title>Ufleku - the desire</title><link>https://ripx80.de/posts/02-ufleku-recipe/</link><pubDate>Wed, 29 Dec 2021 16:11:02 +0100</pubDate><guid>https://ripx80.de/posts/02-ufleku-recipe/</guid><description>&lt;p>brewing recipe for a czech original ufleku beer.&lt;/p></description></item><item><title>Kernel Compiling</title><link>https://ripx80.de/posts/01-kernel-compiling/</link><pubDate>Tue, 28 Dec 2021 16:46:50 +0100</pubDate><guid>https://ripx80.de/posts/01-kernel-compiling/</guid><description>&lt;p>This is a short discurse about self kernel compilation on a arch system. Gentoo users are familiar with this kind of instructions or use the genkernel programm.
You can find an article on &lt;a href="https://wiki.archlinux.org/index.php/Kernels/Traditional_compilation">archlinux&lt;/a>&lt;/p></description></item></channel></rss>