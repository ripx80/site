<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nix on ripx80 onexec</title><link>https://ripx80.de/tags/nix/</link><description>Recent content in nix on ripx80 onexec</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>ripx80</copyright><lastBuildDate>Fri, 31 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://ripx80.de/tags/nix/index.xml" rel="self" type="application/rss+xml"/><item><title>nftables - advanced router</title><link>https://ripx80.de/posts/05-nftables-router/</link><pubDate>Fri, 31 May 2024 00:00:00 +0000</pubDate><guid>https://ripx80.de/posts/05-nftables-router/</guid><description>short this post deals with some advanced rules and configurations to build router based on the previous post about nftables - basics. the focus is in general on nftables but the whole thing is build on a nixos system.
if you need additional ideas or use cases? take a look at the blog (comming soon) post.
system: x86_64 kernel: 6.7.9 nixos: 23.11 nftables: 1.0.9 libressl-3.8.2-nc (netcat) wireguard nixos modules:
firewall firewall-nftables nftables nft 1 2 3 4 5 nft flush ruleset # clear, flush the entire ruleset nft list counters # list named counters # nft syntax for the logging statement nft add rule inet fw services iifname wg0 tcp dport 22 ct state new log prefix \&amp;#34;[nftables] new ssh accepted: \&amp;#34; accept comment &amp;#34;allow and log ssh&amp;#34; network struct the general struct of the network is a central router in the internet, reachable over its public ip (example here: 80.</description></item><item><title>nftables - basics</title><link>https://ripx80.de/posts/04-nftables/</link><pubDate>Mon, 15 Apr 2024 00:00:00 +0000</pubDate><guid>https://ripx80.de/posts/04-nftables/</guid><description>short update: 2024-04-20
nftables is the modern linux kernel (&amp;gt;= 3.13 nft support) packet classification framework to replace iptables.
iptables is not covered in this essay.
you need such packet filters in firewalls and routers to accept, drop or forward network packets. this post will deal the basics of nftables and show some commands/rules to handle rules and configure this rules in your linux system. in particular, a nixos system and its configuration are discussed but these rules apply to most systems with nftables.</description></item></channel></rss>